{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name service-purchase-cljs.core, :imports nil, :requires {reagent reagent.core, views service-purchase-cljs.views, reagent.core reagent.core, routes service-purchase-cljs.routes, service-purchase-cljs.views service-purchase-cljs.views, service-purchase-cljs.events service-purchase-cljs.events, config service-purchase-cljs.config, re-frisk.core re-frisk.core, service-purchase-cljs.config service-purchase-cljs.config, re-frame re-frame.core, re-frame.core re-frame.core, service-purchase-cljs.subs service-purchase-cljs.subs, service-purchase-cljs.routes service-purchase-cljs.routes}, :uses {enable-re-frisk! re-frisk.core}, :defs {dev-setup {:protocol-inline nil, :meta {:file "/home/afadeev/Dropbox/cljs/service-purchase-cljs/src/cljs/service_purchase_cljs/core.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([]))}, :name service-purchase-cljs.core/dev-setup, :variadic false, :file "src/cljs/service_purchase_cljs/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/home/afadeev/Dropbox/cljs/service-purchase-cljs/src/cljs/service_purchase_cljs/core.cljs", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([]))}, :name service-purchase-cljs.core/mount-root, :variadic false, :file "src/cljs/service_purchase_cljs/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/afadeev/Dropbox/cljs/service-purchase-cljs/src/cljs/service_purchase_cljs/core.cljs", :line 22, :column 16, :end-line 22, :end-column 20, :export true, :arglists (quote ([]))}, :name service-purchase-cljs.core/init, :variadic false, :file "src/cljs/service_purchase_cljs/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}